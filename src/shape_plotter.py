import matplotlib.pyplot

class ShapePlotter:

    def __init__(self,plot=matplotlib.pyplot):
        self.plot = plot

    def plotGeoJson(self,data):

        colors = ['red', 'green', 'blue']

        for index,series in enumerate(data):
            label = series['type']
            color = colors[index % len(colors)]

            coordinates = series['coordinates']

            def plot(coordinates):
                xs = [coordinate[0] for coordinate in coordinates]
                ys = [coordinate[1] for coordinate in coordinates]
                self.plot.scatter(xs, ys, c=color, label=color, alpha=0.3, edgecolors='none')

            if (type(coordinates[0][0]) is float):
                plot(coordinates)
            elif (type(coordinates[0][0][0]) is float):
                [plot(coords) for coords in coordinates]


        self.plot.legend()
        self.plot.show()

if (__name__ == '__main__'):

    shape_plotter = ShapePlotter()
    shape_plotter.plotGeoJson([{'type': 'LineString', 'coordinates': ((-0.1779813, 51.6122315), (-0.1778501, 51.6123519))}, {'type': 'Polygon', 'coordinates': (((-6.939164096197238, 58.98016250049913), (-6.184434795699687, 59.607409141407736), (-5.371858801049365, 60.157659010538715), (-4.509261663273959, 60.62561290085516), (-3.604950664353815, 61.00676416058372), (-2.6676348135552046, 61.297442094734734), (-1.7063409749102858, 61.494847315901595), (-0.730326933581873, 61.597078703891796), (0.25100776166848715, 61.60315171455365), (1.2282123212734297, 61.513007861474605), (2.1918757311295995, 61.32751527923749), (3.132717385808085, 61.04846036280978), (4.041676465857961, 60.67853056358362), (4.909999198450772, 60.22128850774976), (5.729323160998159, 59.68113768625982), (6.491757815852755, 59.0632800468012), (7.1899605004991285, 58.37366589619724), (7.817207141407726, 57.6189365956997), (8.367457010538704, 56.80636060104938), (8.835410900855155, 55.943763463273974), (9.216562160583717, 55.03945246435383), (9.507240094734726, 54.10213661355522), (9.704645315901589, 53.1408427749103), (9.806876703891799, 52.164828733581885), (9.812949714553644, 51.183494038331524), (9.722805861474608, 50.20628947872658), (9.537313279237486, 49.24262606887041), (9.25825836280978, 48.30178441419192), (8.888328563583624, 47.392825334142046), (8.431086507749763, 46.52450260154923), (7.8909356862598115, 45.70517863900184), (7.273078046801193, 44.94274398414724), (6.583463896197238, 44.244541299500874), (6.583332696197238, 44.244420899500874), (5.828603395699688, 43.617174258592264), (5.0160274010493655, 43.066924389461285), (4.15343026327396, 42.59897049914484), (3.249119264353814, 42.21781923941628), (2.3118034135552037, 41.927141305265266), (1.3505095749102844, 41.729736084098406), (0.37449553358187426, 41.627504696108204), (-0.6068391616684882, 41.62143168544635), (-1.5840437212734289, 41.711575538525395), (-2.5477071311296005, 41.89706812076251), (-3.488548785808084, 42.17612303719022), (-4.397507865857961, 42.54605283641638), (-5.265830598450769, 43.00329489225024), (-6.085154560998155, 43.543445713740184), (-6.847589215852752, 44.161303353198804), (-7.545791900499128, 44.85091750380276), (-8.173038541407726, 45.6056468043003), (-8.723288410538704, 46.418222798950616), (-9.191242300855157, 47.280819936726026), (-9.572393560583718, 48.18513093564617), (-9.863071494734728, 49.122446786444776), (-10.06047671590159, 50.083740625089696), (-10.162708103891799, 51.0597546664181), (-10.168781114553648, 52.04108936166846), (-10.078637261474613, 53.018293921273404), (-9.893144679237492, 53.98195733112957), (-9.61408976280979, 54.92279898580806), (-9.244159963583638, 55.831758065857926), (-8.786917907749784, 56.70008079845074), (-8.246767086259837, 57.51940476099813), (-7.628909446801223, 58.28183941585272), (-6.939295296197272, 58.9800421004991), (-6.939164096197238, 58.98016250049913)),)}])

    print('plotted')