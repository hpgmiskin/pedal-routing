import matplotlib.pyplot

class ShapePlotter:

    def __init__(self,plot=matplotlib.pyplot):
        self.plot = plot

    def plotGeoJson(self,data):

        colors = ['red', 'green', 'blue']

        for index,series in enumerate(data):
            label = series['type']
            color = colors[index % len(colors)]

            coordinates = series['coordinates']

            def plot(coordinates):
                xs = [coordinate[0] for coordinate in coordinates]
                ys = [coordinate[1] for coordinate in coordinates]
                self.plot.scatter(xs, ys, c=color, label=color, alpha=0.3, edgecolors='none')

            if (type(coordinates[0][0]) is float):
                plot(coordinates)
            elif (type(coordinates[0][0][0]) is float):
                [plot(coords) for coords in coordinates]


        self.plot.legend()
        self.plot.show()

if (__name__ == '__main__'):

    shape_plotter = ShapePlotter()
    shape_plotter.plotGeoJson([{'coordinates': ((0.0, 0.0), (13.40280202629316, 14.605117192077268)), 'type': 'LineString'}, {'coordinates': (((6.034975175014742, 21.366413479741396), (6.7331762021733, 22.056029308471707), (7.495609372006465, 22.673888780438244), (8.314932036300396, 23.21404157116964), (9.183253669910608, 23.671285714013607), (10.092211860832549, 24.04121769791947), (11.033052844800551, 24.320274875656835), (11.996715808823005, 24.505769774055914), (12.973920151764604, 24.5959159758433), (13.9552548616086, 24.589845323816856), (14.931269148647063, 24.48761628167415), (15.892563461752141, 24.290213370975092), (16.8298800111917, 23.999537689661125), (17.734191926205295, 23.618388603442796), (18.596790188704162, 23.150436786377668), (19.40936750587627, 22.600188870272568), (20.16409831395729, 21.972944043355685), (20.853714142687586, 21.274743016197142), (21.471573614654126, 20.512309846363976), (22.011726405385524, 19.69298718207005), (22.468970548229493, 18.824665548459837), (22.838902532135357, 17.915707357537894), (23.117959709872725, 16.974866373569892), (23.303454608271807, 16.011203409547438), (23.393600810059194, 15.033999066605833), (23.38753015803275, 14.052664356761838), (23.285301115890043, 13.076650069723371), (23.08789820519099, 12.11535575661829), (22.797222523877018, 11.17803920717873), (22.41607343765869, 10.273727292165134), (21.94812162059356, 9.411129029666263), (21.397873704488457, 8.59855171249416), (20.770628877571582, 7.843820904413139), (7.367826851278419, -6.761296287664129), (6.669625824119864, -7.450912116394437), (5.907192654286696, -8.068771588360976), (5.087869989992766, -8.608924379092374), (4.219548356382552, -9.066168521936337), (3.31059016546061, -9.436100505842203), (2.3697491814926086, -9.715157683579568), (1.4060862174701576, -9.900652581978648), (0.4288818745285556, -9.990798783766033), (-0.5524528353154377, -9.984728131739589), (-1.5284671223539037, -9.88249908959688), (-2.48976143545898, -9.685096178897824), (-3.42707798489854, -9.394420497583859), (-4.331389899912133, -9.01327141136553), (-5.193988162410999, -8.545319594300404), (-6.006565479583104, -7.995071678195299), (-6.761296287664129, -7.367826851278418), (-7.450912116394425, -6.669625824119877), (-8.068771588360963, -5.907192654286712), (-8.608924379092365, -5.0878699899927815), (-9.06616852193633, -4.219548356382567), (-9.436100505842198, -3.3105901654606273), (-9.715157683579562, -2.3697491814926286), (-9.900652581978646, -1.4060862174701803), (-9.990798783766033, -0.4288818745285806), (-9.98472813173959, 0.5524528353154103), (-9.882499089596886, 1.5284671223538746), (-9.685096178897831, 2.4897614354589495), (-9.394420497583871, 3.427077984898508), (-9.013271411365544, 4.331389899912101), (-8.545319594300423, 5.193988162410968), (-7.995071678195323, 6.006565479583071), (-7.3678268512784495, 6.761296287664097), (6.034975175014742, 21.366413479741396)),), 'type': 'Polygon'}])

    print('plotted')